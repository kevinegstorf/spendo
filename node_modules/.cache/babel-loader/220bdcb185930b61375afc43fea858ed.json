{"ast":null,"code":"var _jsxFileName = \"/Users/kevinegstorf/workspace/frontmen/hackday/spendo/src/components/AppButton.tsx\";\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from '../withRoot';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      height: '48px',\n      textTransform: 'none',\n      fontSize: '18px',\n      fontWeight: 'bold',\n      borderRadius: '10px'\n    },\n    default: {\n      color: theme.palette.primary.light\n    }\n  };\n};\n\nvar MyAppButton = function MyAppButton(props) {\n  return React.createElement(Button, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nvar _renderButtonType = function _renderButtonType(props, buttonType) {\n  return buttonType === 'default' ? [props.classes.default, props.classes.button].join(' ') : [props.classes.register, props.classes.button].join(' ');\n};\n\nvar AppButton = function AppButton(props) {\n  return React.createElement(React.Fragment, null, React.createElement(MyAppButton, {\n    className: _renderButtonType(props, props.buttonType),\n    variant: \"contained\",\n    color: \"secondary\",\n    fullWidth: props.fullWidth,\n    component: props.component,\n    to: props.path,\n    onClick: props.onClick,\n    type: props.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default withRoot(withStyles(styles)(AppButton));","map":{"version":3,"sources":["/Users/kevinegstorf/workspace/frontmen/hackday/spendo/src/components/AppButton.tsx"],"names":["React","Button","withStyles","withRoot","styles","theme","button","height","textTransform","fontSize","fontWeight","borderRadius","default","color","palette","primary","light","MyAppButton","props","_renderButtonType","buttonType","classes","join","register","AppButton","fullWidth","component","path","onClick","type","children"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAoC,0BAApC;AACA,SACEC,UADF,QAKO,0BALP;AAMA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,MAAW,GAAG,SAAdA,MAAc,CAACC,KAAD;AAAA,SAAmB;AACrCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,aAAa,EAAE,MAFT;AAGNC,MAAAA,QAAQ,EAAE,MAHJ;AAINC,MAAAA,UAAU,EAAE,MAJN;AAKNC,MAAAA,YAAY,EAAE;AALR,KAD6B;AAQrCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,OAAd,CAAsBC;AADtB;AAR4B,GAAnB;AAAA,CAApB;;AA6BA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAA2B,oBAAC,MAAD,oBAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;AAAA,CAApB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACD,KAAD,EAAeE,UAAf,EAAsC;AAC9D,SAAOA,UAAU,KAAK,SAAf,GACH,CAACF,KAAK,CAACG,OAAN,CAAcT,OAAf,EAAwBM,KAAK,CAACG,OAAN,CAAcf,MAAtC,EAA8CgB,IAA9C,CAAmD,GAAnD,CADG,GAEH,CAACJ,KAAK,CAACG,OAAN,CAAcE,QAAf,EAAyBL,KAAK,CAACG,OAAN,CAAcf,MAAvC,EAA+CgB,IAA/C,CAAoD,GAApD,CAFJ;AAGD,CAJD;;AAMA,IAAME,SAAyC,GAAG,SAA5CA,SAA4C,CAAAN,KAAK,EAAI;AACzD,SACE,0CACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEC,iBAAiB,CAACD,KAAD,EAAQA,KAAK,CAACE,UAAd,CAD9B;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,SAAS,EAAEF,KAAK,CAACO,SAJnB;AAKE,IAAA,SAAS,EAAEP,KAAK,CAACQ,SALnB;AAME,IAAA,EAAE,EAAER,KAAK,CAACS,IANZ;AAOE,IAAA,OAAO,EAAET,KAAK,CAACU,OAPjB;AAQE,IAAA,IAAI,EAAEV,KAAK,CAACW,IARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGX,KAAK,CAACY,QAVT,CADF,CADF;AAgBD,CAjBD;;AAmBA,eAAe3B,QAAQ,CAACD,UAAU,CAACE,MAAD,CAAV,CAAmBoB,SAAnB,CAAD,CAAvB","sourcesContent":["import * as React from 'react';\nimport Button, { ButtonProps } from '@material-ui/core/Button';\nimport {\n  withStyles,\n  WithStyles,\n  Theme,\n  StyleRulesCallback\n} from '@material-ui/core/styles';\nimport withRoot from '../withRoot';\n\nconst styles: any = (theme: Theme) => ({\n  button: {\n    height: '48px',\n    textTransform: 'none',\n    fontSize: '18px',\n    fontWeight: 'bold',\n    borderRadius: '10px'\n  },\n  default: {\n    color: theme.palette.primary.light\n  }\n});\n\ninterface AppButtonProps extends ButtonProps {\n  component?: React.ReactType<ButtonProps> | React.ComponentType;\n  to?: string;\n}\n\ninterface Props extends WithStyles<typeof styles> {\n  component?: React.ComponentType;\n  children?: string;\n  path: string;\n  onClick?: any;\n  fullWidth?: boolean;\n  buttonType: string;\n  to: string;\n  type: string;\n}\n\nconst MyAppButton = (props: AppButtonProps) => <Button {...props} />;\n\nconst _renderButtonType = (props: Props, buttonType: string) => {\n  return buttonType === 'default'\n    ? [props.classes.default, props.classes.button].join(' ')\n    : [props.classes.register, props.classes.button].join(' ');\n};\n\nconst AppButton: React.FunctionComponent<Props> = props => {\n  return (\n    <>\n      <MyAppButton\n        className={_renderButtonType(props, props.buttonType)}\n        variant=\"contained\"\n        color=\"secondary\"\n        fullWidth={props.fullWidth}\n        component={props.component}\n        to={props.path}\n        onClick={props.onClick}\n        type={props.type}\n      >\n        {props.children}\n      </MyAppButton>\n    </>\n  );\n};\n\nexport default withRoot(withStyles(styles)(AppButton));\n"]},"metadata":{},"sourceType":"module"}